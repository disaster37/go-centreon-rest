// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/disaster37/go-centreon-rest/v21/api (interfaces: ServiceTemplateAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/disaster37/go-centreon-rest/v21/models"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceTemplateAPI is a mock of ServiceTemplateAPI interface.
type MockServiceTemplateAPI struct {
	ctrl     *gomock.Controller
	recorder *MockServiceTemplateAPIMockRecorder
}

// MockServiceTemplateAPIMockRecorder is the mock recorder for MockServiceTemplateAPI.
type MockServiceTemplateAPIMockRecorder struct {
	mock *MockServiceTemplateAPI
}

// NewMockServiceTemplateAPI creates a new mock instance.
func NewMockServiceTemplateAPI(ctrl *gomock.Controller) *MockServiceTemplateAPI {
	mock := &MockServiceTemplateAPI{ctrl: ctrl}
	mock.recorder = &MockServiceTemplateAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceTemplateAPI) EXPECT() *MockServiceTemplateAPIMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockServiceTemplateAPI) Add(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockServiceTemplateAPIMockRecorder) Add(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockServiceTemplateAPI)(nil).Add), arg0, arg1, arg2)
}

// Delete mocks base method.
func (m *MockServiceTemplateAPI) Delete(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockServiceTemplateAPIMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockServiceTemplateAPI)(nil).Delete), arg0, arg1)
}

// DeleteCategories mocks base method.
func (m *MockServiceTemplateAPI) DeleteCategories(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCategories", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCategories indicates an expected call of DeleteCategories.
func (mr *MockServiceTemplateAPIMockRecorder) DeleteCategories(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCategories", reflect.TypeOf((*MockServiceTemplateAPI)(nil).DeleteCategories), arg0, arg1, arg2)
}

// DeleteMacro mocks base method.
func (m *MockServiceTemplateAPI) DeleteMacro(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMacro", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMacro indicates an expected call of DeleteMacro.
func (mr *MockServiceTemplateAPIMockRecorder) DeleteMacro(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMacro", reflect.TypeOf((*MockServiceTemplateAPI)(nil).DeleteMacro), arg0, arg1, arg2)
}

// DeleteServiceGroups mocks base method.
func (m *MockServiceTemplateAPI) DeleteServiceGroups(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteServiceGroups", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteServiceGroups indicates an expected call of DeleteServiceGroups.
func (mr *MockServiceTemplateAPIMockRecorder) DeleteServiceGroups(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServiceGroups", reflect.TypeOf((*MockServiceTemplateAPI)(nil).DeleteServiceGroups), arg0, arg1, arg2)
}

// DeleteTraps mocks base method.
func (m *MockServiceTemplateAPI) DeleteTraps(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTraps", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTraps indicates an expected call of DeleteTraps.
func (mr *MockServiceTemplateAPIMockRecorder) DeleteTraps(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTraps", reflect.TypeOf((*MockServiceTemplateAPI)(nil).DeleteTraps), arg0, arg1, arg2)
}

// Get mocks base method.
func (m *MockServiceTemplateAPI) Get(arg0, arg1 string) (*models.ServiceTemplateGet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*models.ServiceTemplateGet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockServiceTemplateAPIMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockServiceTemplateAPI)(nil).Get), arg0, arg1)
}

// GetCategories mocks base method.
func (m *MockServiceTemplateAPI) GetCategories(arg0, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategories", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategories indicates an expected call of GetCategories.
func (mr *MockServiceTemplateAPIMockRecorder) GetCategories(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategories", reflect.TypeOf((*MockServiceTemplateAPI)(nil).GetCategories), arg0, arg1)
}

// GetMacros mocks base method.
func (m *MockServiceTemplateAPI) GetMacros(arg0, arg1 string) ([]*models.Macro, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMacros", arg0, arg1)
	ret0, _ := ret[0].([]*models.Macro)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMacros indicates an expected call of GetMacros.
func (mr *MockServiceTemplateAPIMockRecorder) GetMacros(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMacros", reflect.TypeOf((*MockServiceTemplateAPI)(nil).GetMacros), arg0, arg1)
}

// GetParam mocks base method.
func (m *MockServiceTemplateAPI) GetParam(arg0, arg1 string, arg2 []string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParam", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParam indicates an expected call of GetParam.
func (mr *MockServiceTemplateAPIMockRecorder) GetParam(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParam", reflect.TypeOf((*MockServiceTemplateAPI)(nil).GetParam), arg0, arg1, arg2)
}

// GetServiceGroups mocks base method.
func (m *MockServiceTemplateAPI) GetServiceGroups(arg0, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceGroups", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceGroups indicates an expected call of GetServiceGroups.
func (mr *MockServiceTemplateAPIMockRecorder) GetServiceGroups(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceGroups", reflect.TypeOf((*MockServiceTemplateAPI)(nil).GetServiceGroups), arg0, arg1)
}

// GetTraps mocks base method.
func (m *MockServiceTemplateAPI) GetTraps(arg0, arg1 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTraps", arg0, arg1)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTraps indicates an expected call of GetTraps.
func (mr *MockServiceTemplateAPIMockRecorder) GetTraps(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTraps", reflect.TypeOf((*MockServiceTemplateAPI)(nil).GetTraps), arg0, arg1)
}

// List mocks base method.
func (m *MockServiceTemplateAPI) List() ([]*models.ServiceTemplateGet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]*models.ServiceTemplateGet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockServiceTemplateAPIMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockServiceTemplateAPI)(nil).List))
}

// SetCategories mocks base method.
func (m *MockServiceTemplateAPI) SetCategories(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCategories", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCategories indicates an expected call of SetCategories.
func (mr *MockServiceTemplateAPIMockRecorder) SetCategories(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCategories", reflect.TypeOf((*MockServiceTemplateAPI)(nil).SetCategories), arg0, arg1, arg2)
}

// SetMacro mocks base method.
func (m *MockServiceTemplateAPI) SetMacro(arg0, arg1 string, arg2 *models.Macro) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMacro", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMacro indicates an expected call of SetMacro.
func (mr *MockServiceTemplateAPIMockRecorder) SetMacro(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMacro", reflect.TypeOf((*MockServiceTemplateAPI)(nil).SetMacro), arg0, arg1, arg2)
}

// SetParam mocks base method.
func (m *MockServiceTemplateAPI) SetParam(arg0, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetParam", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetParam indicates an expected call of SetParam.
func (mr *MockServiceTemplateAPIMockRecorder) SetParam(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetParam", reflect.TypeOf((*MockServiceTemplateAPI)(nil).SetParam), arg0, arg1, arg2, arg3)
}

// SetServiceGroups mocks base method.
func (m *MockServiceTemplateAPI) SetServiceGroups(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetServiceGroups", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetServiceGroups indicates an expected call of SetServiceGroups.
func (mr *MockServiceTemplateAPIMockRecorder) SetServiceGroups(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetServiceGroups", reflect.TypeOf((*MockServiceTemplateAPI)(nil).SetServiceGroups), arg0, arg1, arg2)
}

// SetTraps mocks base method.
func (m *MockServiceTemplateAPI) SetTraps(arg0, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTraps", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTraps indicates an expected call of SetTraps.
func (mr *MockServiceTemplateAPIMockRecorder) SetTraps(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTraps", reflect.TypeOf((*MockServiceTemplateAPI)(nil).SetTraps), arg0, arg1, arg2)
}
